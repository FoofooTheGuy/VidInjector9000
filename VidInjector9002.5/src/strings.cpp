#include "strings.hpp"

wxString ProgramDir;
std::string version = "VidInjector9000 ver. 3.5";

std::string Language = "English";
std::string ErrorText = "Error:";
std::string MissingVariableError = "Missing variable";
std::string FailedToFindVar = "Failed to find the variable";
std::string ValueNoChange = "The value will not be changed";
std::string BadValue = "Bad value";
std::string BadVersion = "Bad version";
std::string SupportedVersion = "Supported version:";
std::string BeANumber = "must be a number";
std::string frameText = "VidInjector9002.5";
std::string logFrameText = "Console Log";
std::string buildFrameText = "Export Archive";
std::string aboutFrameText = "About";
std::string file = "&File";
std::string fileNew = "&New";
std::string fileOpen = "&Open...";
std::string fileSave = "&Save";
std::string fileSaveAs = "Save &as...";
std::string fileExport = "Ex&port...";
std::string fileExtract = "Ex&tract...";
std::string fileImportSeed = "&Import Seed";
std::string options = "&Options";
std::string optionsShowLog = "&Show Log";
std::string optionsSystemMode = "S&ystem";
std::string optionsLightMode = "L&ight Mode";
std::string optionsDarkMode = "D&ark Mode";
std::string language = "&Language";
std::string help = "&Help";
std::string helpAbout = "&About";
std::string Return = "Return";
std::string ModeText = "Mode:";
std::string SingleVideo = "Single video";
std::string MultiVideo = "Multi video";
std::string Browse = "Browse";
std::string BannerText = "Banner:";
std::string IconText = "Icon:";
std::string ShortNameText = "Short name:";
std::string LongNameText = "Long name:";
std::string PublisherText = "Publisher:";
std::string CopyrightCheckText = "Copyright information:";
std::string BannerCustomText = "Unavailable for non video banners";
std::string BannerPreviewText = "Banner preview";
std::string FFrewindCheckText = "Fast forward/Rewind buttons";
std::string DimCheckText = "Dim after 5 seconds";
std::string TextTooLongError = "Text is too long";
std::string ImageInfoError = "Failed to get image info.";
std::string CopyFileError = "Failed to copy the file.";
std::string CLIError = "Failed to access CLI.\nIs VidInjector9002-CLI(.exe) in \"VidInjector9000Resources/\"?";
std::string BuildError = "Failed to build the archive.";
std::string ExtractError = "Failed to extract the archive.";
std::string SeeLog = "See log for details.";
std::string FileSaved = "The file was successfully saved.";
std::string PlayerTitleText = "Player title";
std::string MoflexFileText = "Moflex file*";
std::string MenuBannerText = "Menu banner";
std::string SplitIntoAPatch = "Split into a patch";
std::string TitleIDText = "Title ID: 000400000";
std::string ApplicationTitleText = "Application title:";
std::string ProductCodeText = "Product code: CTR-H-";
std::string Build = "Build";
std::string Cancel = "Cancel";
std::string SuccessfullyBuilt = "Successfully built the archive.";
std::string SuccessfullyExtracted = "Successfully extracted the archive.";
std::string extractingArchive = "Extracting Archive...";
std::string clickToCancel = "Click \"Cancel\" to abort";
std::string ByMeText = "by FoofooTheGuy";
std::string GitHubLinker = "Learn more on GitHub";
std::string onlyMultiVideo = "(Only available in multi video mode)";
std::string modeChoiceBoxTip = "Expand to select the export mode";
std::string bannerBoxTip = "The path of the image to be shown on the home menu top screen";
std::string bannerBrowseTip = "Select the image to be shown on the home menu top screen";
std::string iconBoxTip = "The path of the image to be shown on the home menu bottom screen";
std::string iconBrowseTip = "Select the image to be shown on the home menu bottom screen";
std::string shortnameBoxTip = "The concise description of the content";
std::string longnameBoxTip = "The description of the content to be shown on the home menu bottom screen";
std::string publisherBoxTip = "The publisher of the content to be shown on the home menu bottom screen";
std::string copyBoxTip = "The copyright information for the content, if any.";
std::string copyCheckTip = "Enable to show the Copyright button in the main menu.";
std::string iconPreviewTip = "Cycle through border modes";
std::string ffRewindCheckTip = "Enable to show fast forward and rewind buttons in the video player";
std::string dimCheckTip = "Enable to let the bottom screen dim while playing a video";
std::string multiBannerPreviewTip = "Select the image to replace this banner";
std::string multiBannerPreviewLeftTip = "Preview the previous banner";
std::string multiBannerPreviewRightTip = "Preview the next banner";
std::string moflexFileTip = "*This column is required to export";
std::string playerTitlesTip = "The title of the video in this row.";
std::string moflexFilesTip = "The path of the .moflex file in this row.";
std::string menuBannersTip = "The path of the image to be shown in this row of the multi video menu.";
std::string multiUpTip = "Swap the current row with the previous row";
std::string multiDownTip = "Swap the current row with the next row";
std::string moflexBrowseTip = "Select the .moflex file for the last empty row";
std::string multiBannerBrowseTip = "Select the image for the last empty row";
std::string removeRowTip = "Remove the last row";
std::string appendRowTip = "Add a new row";
std::string splitPatchTip = "Put a separator between the rows to put the remaining rows in a Luma LayeredFS game patch (.tar)";
std::string splitPatchUpTip = "Move the separator up one row";
std::string splitPatchDownTip = "Move the separator down one row";
std::string titleIDBoxTip = "Five hexadecimal integers ranging from C0000 to EFFFF for the unique ID of the .cia";
std::string titleIDButtonTip = "Randomize the Unique ID";
std::string applicationTitleBoxTip = "The internal name of the application";
std::string productCodeBoxTip = "The product code of the application";
std::string buildButtonTip = "Select where to save the archive";
std::string cancelButtonTip = "Abort the building process";
std::string chooseDirSave = "Choose the directory to save to";
std::string moflexFiles = "MoFlex Files (*.moflex)|*.moflex";
std::string extractFiles = "Supported Files (*.cia;*.tar)|*.cia;*.tar";
std::string vi9pFiles = "VidInjector9000 Project Files (*.vi9p)|*.vi9p";
std::string ciaFiles = "CTR Importable Archives (*.cia)|*.cia";
std::string tarFiles = "Tape ARchives (*.tar)|*.tar";
std::string seeddbFiles = "seeddb.bin (*.bin)|*.bin";
std::string allFiles = "All Files (*.*)|*.*";

//dont mess with this stuff
std::string tempPath = "temp";
std::string CLItempPath = "CLItemp";
std::string githubRepoLink = "https://github.com/FoofooTheGuy/VidInjector9000/blob/main/README.md";

std::string resourcesPath = "VidInjector9000Resources";
std::string languagePath = "language";
std::string imagePath = "image";
std::string CLIFile = "VidInjector9002-CLI";
std::string settingsFile = "settings.txt";
std::string vi9pFile = "parameters.vi9p";
std::string seedFile = "seeddb.bin";

std::string StrVerParam = "STR:VER";
std::string IntMultiParam = "INT:MULTI";
std::string StrBannerParam = "STR:BANNER";
std::string StrIconParam = "STR:ICON";
std::string IntIconBorderParam = "INT:ICONBORDER";
std::string StrSNameParam = "STR:SNAME";
std::string StrLNameParam = "STR:LNAME";
std::string StrPublisherParam = "STR:PUBLISHER";
std::string IntCopycheckParam = "INT:COPYCHECK";
std::string StrCopyrightParam = "STR:COPYRIGHT";
std::string IntFFrewindParam = "INT:FFREWIND";
std::string IntFadeOptParam = "INT:FADEOPT";
std::string IntRowsParam = "INT:ROWS";
std::string StrPTitleParam = "STR:PTITLE";
std::string StrMoflexParam = "STR:MOFLEX";
std::string StrMBannerParam = "STR:MBANNER";
std::string IntSplitPatchParam = "INT:SPLITPATCH";

std::string IntDefaultLanguage = "INT:DEFAULT LANGUAGE";
std::string IntShowLog = "INT:SHOW LOG";
std::string IntColorMode = "INT:COLOR MODE";
std::string IntFrameWidth = "INT:FRAME WIDTH";
std::string IntFrameHeight = "INT:FRAME HEIGHT";
std::string StrImagesPath = "STR:IMAGES PATH";
std::string StrVideosPath = "STR:VIDEOS PATH";

//use helper thing to make
std::string inLangLanguage = "Language";
std::string inLangErrorText = "ErrorText";
std::string inLangMissingVariableError = "MissingVariableError";
std::string inLangFailedToFindVar = "FailedToFindVar";
std::string inLangValueNoChange = "ValueNoChange";
std::string inLangBadValue = "BadValue";
std::string inLangBadVersion = "BadVersion";
std::string inLangSupportedVersion = "SupportedVersion";
std::string inLangBeANumber = "BeANumber";
std::string inLangframeText = "frameText";
std::string inLanglogFrameText = "logFrameText";
std::string inLangbuildFrameText = "buildFrameText";
std::string inLangaboutFrameText = "aboutFrameText";
std::string inLangfile = "file";
std::string inLangfileNew = "fileNew";
std::string inLangfileOpen = "fileOpen";
std::string inLangfileSave = "fileSave";
std::string inLangfileSaveAs = "fileSaveAs";
std::string inLangfileExport = "fileExport";
std::string inLangfileExtract = "fileExtract";
std::string inLangfileImportSeed = "fileImportSeed";
std::string inLangoptions = "options";
std::string inLangoptionsShowLog = "optionsShowLog";
std::string inLangoptionsSystemMode = "optionsSystemMode";
std::string inLangoptionsLightMode = "optionsLightMode";
std::string inLangoptionsDarkMode = "optionsDarkMode";
std::string inLanglanguage = "language";
std::string inLanghelp = "help";
std::string inLanghelpAbout = "helpAbout";
std::string inLangReturn = "Return";
std::string inLangModeText = "ModeText";
std::string inLangSingleVideo = "SingleVideo";
std::string inLangMultiVideo = "MultiVideo";
std::string inLangBrowse = "Browse";
std::string inLangBannerText = "BannerText";
std::string inLangIconText = "IconText";
std::string inLangShortNameText = "ShortNameText";
std::string inLangLongNameText = "LongNameText";
std::string inLangPublisherText = "PublisherText";
std::string inLangCopyrightCheckText = "CopyrightCheckText";
std::string inLangBannerCustomText = "BannerCustomText";
std::string inLangBannerPreviewText = "BannerPreviewText";
std::string inLangFFrewindCheckText = "FFrewindCheckText";
std::string inLangDimCheckText = "DimCheckText";
std::string inLangTextTooLongError = "TextTooLongError";
std::string inLangImageInfoError = "ImageInfoError";
std::string inLangCopyFileError = "CopyFileError";
std::string inLangCLIError = "CLIError";
std::string inLangBuildError = "BuildError";
std::string inLangExtractError = "ExtractError";
std::string inLangSeeLog = "SeeLog";
std::string inLangFileSaved = "FileSaved";
std::string inLangPlayerTitleText = "PlayerTitleText";
std::string inLangMoflexFileText = "MoflexFileText";
std::string inLangMenuBannerText = "MenuBannerText";
std::string inLangSplitIntoAPatch = "SplitIntoAPatch";
std::string inLangTitleIDText = "TitleIDText";
std::string inLangApplicationTitleText = "ApplicationTitleText";
std::string inLangProductCodeText = "ProductCodeText";
std::string inLangBuild = "Build";
std::string inLangCancel = "Cancel";
std::string inLangSuccessfullyBuilt = "SuccessfullyBuilt";
std::string inLangSuccessfullyExtracted = "SuccessfullyExtracted";
std::string inLangextractingArchive = "extractingArchive";
std::string inLangclickToCancel = "clickToCancel";
std::string inLangByMeText = "ByMeText";
std::string inLangGitHubLinker = "GitHubLinker";
std::string inLangonlyMultiVideo = "onlyMultiVideo";
std::string inLangmodeChoiceBoxTip = "modeChoiceBoxTip";
std::string inLangbannerBoxTip = "bannerBoxTip";
std::string inLangbannerBrowseTip = "bannerBrowseTip";
std::string inLangiconBoxTip = "iconBoxTip";
std::string inLangiconBrowseTip = "iconBrowseTip";
std::string inLangshortnameBoxTip = "shortnameBoxTip";
std::string inLanglongnameBoxTip = "longnameBoxTip";
std::string inLangpublisherBoxTip = "publisherBoxTip";
std::string inLangcopyBoxTip = "copyBoxTip";
std::string inLangcopyCheckTip = "copyCheckTip";
std::string inLangiconPreviewTip = "iconPreviewTip";
std::string inLangffRewindCheckTip = "ffRewindCheckTip";
std::string inLangdimCheckTip = "dimCheckTip";
std::string inLangmultiBannerPreviewTip = "multiBannerPreviewTip";
std::string inLangmultiBannerPreviewLeftTip = "multiBannerPreviewLeftTip";
std::string inLangmultiBannerPreviewRightTip = "multiBannerPreviewRightTip";
std::string inLangmoflexFileTip = "moflexFileTip";
std::string inLangplayerTitlesTip = "playerTitlesTip";
std::string inLangmoflexFilesTip = "moflexFilesTip";
std::string inLangmenuBannersTip = "menuBannersTip";
std::string inLangmultiUpTip = "multiUpTip";
std::string inLangmultiDownTip = "multiDownTip";
std::string inLangmoflexBrowseTip = "moflexBrowseTip";
std::string inLangmultiBannerBrowseTip = "multiBannerBrowseTip";
std::string inLangremoveRowTip = "removeRowTip";
std::string inLangappendRowTip = "appendRowTip";
std::string inLangsplitPatchTip = "splitPatchTip";
std::string inLangsplitPatchUpTip = "splitPatchUpTip";
std::string inLangsplitPatchDownTip = "splitPatchDownTip";
std::string inLangtitleIDBoxTip = "titleIDBoxTip";
std::string inLangtitleIDButtonTip = "titleIDButtonTip";
std::string inLangapplicationTitleBoxTip = "applicationTitleBoxTip";
std::string inLangproductCodeBoxTip = "productCodeBoxTip";
std::string inLangbuildButtonTip = "buildButtonTip";
std::string inLangcancelButtonTip = "cancelButtonTip";
std::string inLangchooseDirSave = "chooseDirSave";
std::string inLangmoflexFiles = "moflexFiles";
std::string inLangextractFiles = "extractFiles";
std::string inLangvi9pFiles = "vi9pFiles";
std::string inLangciaFiles = "ciaFiles";
std::string inLangtarFiles = "tarFiles";
std::string inLangseeddbFiles = "seeddbFiles";
std::string inLangallFiles = "allFiles";
